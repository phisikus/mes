<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_PURCHASES" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="purchaseList" modelName="purchase" menuAccessible="true">

    <component type="window" name="window">
        <ribbon>
            <template name="standardGridTemplate"/>
            <group name="stats">
                <bigButton name="generateStats" icon="generateIcon24.png"
                           action="#{window}.fireEvent(getAveragePriceOfAllPurchases);" state="enabled"/>
            </group>
        </ribbon>

        <listener event="getAveragePriceOfAllPurchases" class="com.qcadoo.mes.purchase.PurchaseService"
                  method="getAveragePriceOfAllPurchases"/>

        <component type="label" name="averagePrice">
            <option type="labelStyle" value="normal"/>
        </component>

        <component type="grid" name="purchases" reference="grid">

            <option type="column" name="date" fields="date" link="true"/>
            <option type="column" name="product" fields="product" expression="#product['name']" link="true"/>
            <option type="column" name="quantity" fields="quantity" link="true"/>
            <option type="column" name="price" fields="price" link="true"/>

            <option type="order" column="date" direction="desc"/>

            <option type="searchable" value="date,product"/>
            <option type="orderable" value="date,product"/>

            <option type="correspondingView" value="purchase/purchaseDetails"/>
            <option type="correspondingComponent" value="form"/>

            <option type="fullscreen" value="true"/>
            <option type="multiselect" value="true"/>
        </component>

        <option type="fixedHeight" value="true"/>
        <option type="header" value="false"/>

        <script>
            <![CDATA[
            function GetURLParameter(sParam)
            {
                 var sPageURL = window.location.search.substring(1);
                 var sURLVariables = sPageURL.split('&');
                 for (var i = 0; i < sURLVariables.length; i++)
                 {
                    var sParameterName = sURLVariables[i].split('=');
                    if (sParameterName[0] == sParam)
                    {
                        return sParameterName[1];
                    }
                 }
            }

            function getAveragePrice(parameterName)
            {
                var averagePrice = GetURLParameter(parameterName)
                var averagePriceValue = "-";
                if(averagePrice != null && !isNaN(averagePrice))
                {
                    averagePriceValue =  parseFloat(averagePrice).toFixed(2);
                }
                return averagePriceValue;
            }

            function addPriceLabel(labelName, value)
            {
                var priceLabel = document.getElementById(labelName);
                var priceValueContainer = document.createElement("span");
                priceLabel.style.display = "inline";
                priceValueContainer.innerHTML = value;
                priceValueContainer.className = "component_label";
                priceLabel.appendChild(priceValueContainer);
            }

            addPriceLabel("window.mainTab.averagePrice", getAveragePrice("averagePrice"));

            ]]>
        </script>

    </component>

</view>